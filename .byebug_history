c
params
c
params[:original_url]
params[:shortened_url][:original]
c
params
c
params
c
params
 params.require(:shortened_url).permit(:original_url)
shortened_url_params
c
shortened_url_params
 params.require(:shortened_url).permit(:original_url)
shortened_url_params
params
c
params[:shortened_url][:original] = params[:original_url]
params[:shortened_url][:original]
params.require(:shortened_url).permit(:original_url)
params[:original_url]
c
params[:original_url]
params
c
    params.require(:shortened_url).permit(:original_url)
params
shortened_url_params
c
params
c
params
c
params
@shortened_url
c
params
@shortened_url
c
@shortdoijfvbgtjrbhoijoikjokjbgergregregregcc
c
params
c
params.require(:shortened_url).permit(:original_url)
original_url = params[:original_url]
(:original_url) = params[:original_url]
params.require(:shortened_url).permit(:original_url) = params[:original_url]
params.require(:shortened_url).permit(:original_url)
params[:shortened_url][:original_url] = params[:original_url]
params[:original_url]
params.require(:shortened_url).permit(:original_url).errors.full_messages
params.require(:shortened_url).permit(:original_url).errors
params.require(:shortened_url).permit(:original_url).error
params.require(:shortened_url).permit(:original_url).inspect
params.require(:shortened_url).permit(:original_url)
params[:original_url]
c
params[:original_url]
c
params[:original_url]
c
params[:original_url]
c
params[:original_url]
ShortenedUrl.new(shortened_url_params)
c
params[:original_url]
c
params[:original_url]
params
c
params
c
params
c
params[:original_url]
c
params[:original_url]
c
params[:original_url]
params(:original_url)
c
params(:original_url)
params
u  = ShortenedUrl.new(shortened_url_params)
u.errors.full_messages
u  = ShortenedUrl.new
u  = ShortenedUrl.new(shortened_url_params)
ShortenedUrl.new(shortened_url_params)
params[:original_url]
original_url
params
param
ShortenedUrl.new(shortened_url_params)
@shortened_url
c
@shortened_url
c
ShortenedUrl.new(shortened_url_params)
params
c
a
cprm
http://localhost:3000/shortened_urls/@shortened_url.original_url
http://localhost:3000/shortened_urls
http://localhost:3000/shortened_urls/#{params[id]}
params
http://localhost:3000/shortened_urls/#{params[]}
c
ShortenedUrl.where("short_url = ?",(params[:id]))
c
ShortenedUrl.where("short_url = ?",(params[:id]))
ShortenedUrl.where("short_url = ?",(params[:id]))c
c
ShortenedUrl.where("short_url = ?",(params[:id]))
c
ShortenedUrl.where("short_url = ?",(params[:id]))
c
ShortenedUrl.where("short_url = ?",(params[:id]))
c
ShortenedUrl.where("short_url = ?", "OPUifbJJ" )
ShortenedUrl.where("short_url = ?",OPUifbJJ )
ShortenedUrl.where("short_url = ?",(params[:id]))
ShortenedUrl.where("short_url = ?",(params[:id])
ShortenedUrl.find_by_short_url(params[:id])
params
c
@shortened_url
c
@shortened_url
c
s.original_url
s = ShortenedUrl.find_by_short_url(params[:id])
ShortenedUrl.find_by_short_url(params[:id])
ShortenedUrl.find_by_short_url(params[:short_url])
ShortenedUrl.where("short_url = ?",(params[:id])).original_url
ShortenedUrl.original_url.where("short_url = ?",(params[:id]))
ShortenedUrl.where("short_url = ?",(params[:id])).o
c
@shortened_url.find(params[:original_url])
@shortened_url.(params[:original_url])
@shortened_url.params[:original_url]
@shortened_url.original_url
@shortened_url.find(original_url)
@shortened_url
params
@shortened_url.original_url
@shortened_url
@shortened_url = ShortenedUrl.where("short_url = ?",(params[:id]))
ShortenedUrl.where("short_url = ?",(params[:id]))
c
ShortenedUrl.where("short_url = ?",(params[:id]))
ShortenedUrl.where("short_url = ?",(params[:id])
ShortenedUrl.find(params[:short_url])
ShortenedUrl.find(params[:id])
ShortenedUrl.find_by_short_url(params[:short_url])
params
c
params
c
params
ShortenedUrl.new(shortened_url_params)
c
ShortenedUrl.new(shortened_url_params)
 @shortened_url = ShortenedUrl.new(shortened_url_params)
params
c
params
c
@shortened_url.present?
c
@shortened_url.present?
c
@shortened_url.present?
@shortened_url.present.errors.any?
@shortened_url.errors.any?
c
@shortened_url.present?
@shortened_url.nil?
@shortened_url.nil
@shortened_url.nil!
@shortened_url.nil!?
@shortened_url.!nil?
@shortened_url.?
@shortened_url.value?
@shortened_url.any?
c
@shortened_url == !nil
@shortened_url == nil
@shortened_url = nil
c
@shortened_url != nil
@shortened_url.nil?
@shortened_url.nil
@shortened_url.nil?
@shortened_url.empty?
@shortened_url.nil = false?
@shortened_url.nil.false?
@shortened_url.nil.false
@shortened_url.nil == false
@shortened_url.nil = false
@shortened_url.nil?
c
@shortened_url != nil
@shortened_url.any?
@shortened_url
c
@shortened_url
c
ShortenedUrl.last
ShortenedUrl.last.destroy
ShortenedUrl.last
ShortenedUrl
@shortened_url.short_url
@shortened_url.save
c
short_url
c
short_url
c
ShortenedUrl.exists?(short_url: short_url)
short_url = ShortenedUrl.last.short_url
ShortenedUrl.last.short_url
ShortenedUrl.last
ShortenedUrl.exists?(short_url: short_url)
short_url
c
params
param
@shortened_urls
@short_url
@shortened_url = nil
params
@original_url
@short_url
@shortened_urls
@shortened_url
c
    @shortened_urls = ShortenedUrl.all.order('created_at DESC')
    @shortened_urls = ShortenedUrl.all
c
self.short_url = short_url
short_url
c
short_url
c
short_url
c
short_url
c
ShortenedUrl.new(original_url: original_url, short_url: short_url)
s = ShortenedUrl.new(original_url: original_url, short_url: short_url)
ShortenedUrl
short_url
